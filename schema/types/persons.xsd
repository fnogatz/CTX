<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xerces="http://xerces.apache.org">
    <xs:complexType name="person">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                General information about a person
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="name" type="xs:anyType">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Supports two types:
                            * person-name-complex: specify data as complex type
                            * (compat-mode) compat-string: specify name as free text 
                                -- only if @type is set to "string"
                    </xs:documentation>
                </xs:annotation>

                <xs:alternative
                    test="@type eq 'string'"
                    type="compat-string" />
                <xs:alternative
                    test="true()"
                    type="person-name-complex" />
            </xs:element>

            <xs:element name="gender" type="xs:string" minOccurs="0" />

            <xs:choice minOccurs="0">
                <xs:element name="birth">
                    <xs:simpleType>
                        <xs:restriction base="xs:date">
                            <xs:assertion
                                test="$value le current-date()"
                                xerces:message="Birth date must not be in future" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>

                <xs:element name="birth-year">
                    <xs:simpleType>
                        <xs:restriction base="xs:gYear">
                            <xs:assertion
                                test="xs:int($value) le year-from-date(current-date())"
                                xerces:message="Birth year must not be in future" />
                        </xs:restriction>
                    </xs:simpleType>
                </xs:element>
            </xs:choice>

            <xs:element name="origin" minOccurs="0">
                <xs:annotation>
                    <xs:documentation xml:lang="en">
                        Free text to store the affiliation of a person, e.g. club, school, state. Often used in participants lists and standings.
                    </xs:documentation>
                </xs:annotation>

                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="type" use="optional" default="">
                                <xs:annotation>
                                    <xs:documentation xml:lang="en">
                                        Optional attribute to state the kind of this value, e.g., "school".
                                    </xs:documentation>
                                </xs:annotation>

                                <xs:simpleType>
                                    <xs:union memberTypes="person-origin-type xs:string" />
                                </xs:simpleType>
                            </xs:attribute>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="identifiers" type="person-identifiers" minOccurs="0" />

            <xs:element name="contact-information" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="address" type="address" minOccurs="0" />
                        
                        <xs:element name="phone" type="phone" minOccurs="0" maxOccurs="unbounded" />

                        <xs:element name="mail" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:simpleContent>
                                    <xs:extension base="mail-entity">
                                        <xs:attribute name="description" type="xs:string">
                                            <xs:annotation>
                                                <xs:documentation xml:lang="de">
                                                    Bemerkung/Beschreibung zur Mail-Adresse.
                                                </xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                    </xs:extension>
                                </xs:simpleContent>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>

                    <xs:assert test="count(*) ge 0" xerces:message="'contact' node must not be empty.">
                        <xs:annotation>
                            <xs:documentation xml:lang="de">
                                Wenn "contact" vorhanden ist, dann darf es nicht leer sein.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:assert>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="person-origin-type">
        <xs:annotation>
            <xs:documentation xml:lang="de">
                Aufzählung möglicher Attribute für
                /tournament/players/player/origin/@type
            </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:enumeration value="school" />
            <xs:enumeration value="city" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="person-identifiers">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                A person's identifiers as stored by federations, etc.
            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="fide" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="id">
                            <xs:simpleType>
                                <xs:restriction base="xs:positiveInteger">
                                    <xs:minInclusive value="1000000" />
                                    <xs:maxExclusive value="100000000" />
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element name="federation" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="id" minOccurs="0">
                            <xs:simpleType>
                                <xs:restriction base="xs:string">
                                    <xs:minLength value="1" />
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:element>
                    </xs:sequence>

                    <xs:attribute name="code" type="country-code" use="required" />
                </xs:complexType>
            </xs:element>

            <xs:element name="club" type="player-identifier-club" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="mail-entity">
        <xs:annotation>
            <xs:documentation xml:lang="en">
                Format of a valid mail address
            </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:pattern value="([0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
